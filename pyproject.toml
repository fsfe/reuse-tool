# SPDX-FileCopyrightText: 2018 Free Software Foundation Europe e.V. <https://fsfe.org>
# SPDX-FileCopyrightText: 2022 Alliander N.V. <https://www.alliander.com>
# SPDX-FileCopyrightText: 2022 Carmen Bianca Bakker <carmenbianca@fsfe.org>
# SPDX-FileCopyrightText: 2023 DB Systel GmbH
#
# SPDX-License-Identifier: GPL-3.0-or-later

[tool.poetry]
name = "reuse"
version = "2.1.0"
description = "reuse is a tool for compliance with the REUSE recommendations."
authors = [
    "Free Software Foundation Europe <contact@fsfe.org>",
]
maintainers = [
    "Carmen Bianca Bakker <carmenbianca@fsfe.org>",
    "Max Mehl <max.mehl@fsfe.org>",
    "Linus Sehn <linus@fsfe.org>",
]
license = "Apache-2.0 AND CC0-1.0 AND CC-BY-SA-4.0 AND GPL-3.0-or-later"
readme = "README.md"

packages = [
    { include = "reuse", from = "src" }
]
include = [
    { path = "src/reuse/locale/**/*.mo", format="wheel" },
    { path = "tests", format = "sdist" },
    { path = "po", format = "sdist" },
    { path = "AUTHORS.rst", format = "sdist" },
    { path = "README.md", format = "sdist" },
    { path = "CHANGELOG.md", format = "sdist" },
    { path = ".reuse", format = "sdist" },
    { path = "LICENSES", format = "sdist" },
    { path = "docs", format = "sdist" },
]

homepage = "https://reuse.software/"
repository = "https://github.com/fsfe/reuse-tool"
documentation = "https://reuse.readthedocs.org/"

classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved",
    "License :: DFSG approved",
    "License :: CC0 1.0 Universal (CC0 1.0) Public Domain Dedication",
    "License :: OSI Approved :: Apache Software License",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
]

[tool.poetry.dependencies]
python = "^3.8"
Jinja2 = "^3.0.0"
binaryornot = "^0.4.4"
"boolean.py" = ">=3.8"
license-expression = ">=1.0"
python-debian = "^0.1.34,!=0.1.45,!=0.1.46,!=0.1.47"

[tool.poetry.group.test.dependencies]
pytest = ">=6.0.0"
pytest-cov = ">=2.10.0"

[tool.poetry.group.docs.dependencies]
Sphinx = ">=4.0.0"
recommonmark = "^0.7.1"
sphinxcontrib-apidoc = "^0.3.0"
furo = "^2023.3.27"

[tool.poetry.group.dev.dependencies]
black = ">=20"
isort = "^5.6.0"
pre-commit = "^2.9.0"
bump2version = "^1.0.0"
pylint = "^2.12.2"
mypy = "^1.0"
GitPython = "^3.0"

[tool.poetry.group.lsp]
optional = true

[tool.poetry.group.lsp.dependencies]
python-lsp-server = "*"
pylsp-mypy = "*"
pyls-isort = "*"
python-lsp-black = "*"

[tool.poetry.scripts]
reuse = 'reuse._main:main'

[tool.poetry.build]
generate-setup-file = false
script = "_build.py"

[build-system]
requires = ["poetry-core>=1.1.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 80

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 80

[tool.pytest.ini_options]
addopts = "--doctest-modules"

[tool.mypy]
files = [
    "src/reuse/**.py",
    "tests/**.py",
]
exclude = [
    '^_build\.py$',
    '^conf\.py$',
]

[[tool.mypy.overrides]]
module = "reuse.*"
disallow_untyped_defs = true
disallow_incomplete_defs = true

[[tool.mypy.overrides]]
module = [
    "binaryornot.check",
    "boolean.boolean",
    "license_expression",
    "pkg_resources",
]
ignore_missing_imports = true
